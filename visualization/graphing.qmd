---
title: Graphical Representation of Time Series in Weather Data
author: Jack Bienvenue
date: 7 February 2025
type: html
---

In this file, we will make some codes to visualize the time series data we gathered from converting the *.grib* files into individual grid cells.

``` {python}
#| echo: false
#| eval: true

# Package Import
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns
import numpy as np

# Data Import
df = pd.read_csv("/Volumes/JB_Fortress_L3/EEC/aggregated_csvs/lat_41_981_lon_-72_42732_time_series_weather.csv")
    ##### Example CSV to be observed
```

Let's go ahead and begin working on plots. The first one can be of the temperature over time. We can do this in the following way:

``` {python}
#| echo: false
#| eval: true

# Ensure 'time' column is in datetime format
df['date'] = pd.to_datetime(df['date'])

# Create the interactive plot
fig = px.line(df, x='date', y='avg_temp', title='Avg Daily Temperature at 2 Meter Elevation vs. Time')

# Show the interactive plot
fig.show()

```

Let's continue and plot the total precipitation:

``` {python}
#| echo: false
#| eval: false

# Ensure 'time' column is in datetime format
df['time'] = pd.to_datetime(df['time'])

# Create the interactive plot
fig1 = px.line(df, x='time', y='tp', title='Total Precipitation vs. Time')

# Show the interactive plot
fig1.show()

```

Let's calculate wind speed and view it:

``` {python}
#| echo: false
#| eval: false

# Add Wind Speed variable by triangularizing
df['wind_speed'] = np.sqrt(df['u10']**2 + df['v10']**2)

fig2 = px.line(df, x='time', y='wind_speed', title='Triangularized Wind Speed vs. Time')

fig2.show()
```

IDEA: Animated map of grid cells, time series of variables

- Do strong winds that blow in different directions than what is usual lead to more power outages (vegetation may grow to become strong to certain forces, but not others)